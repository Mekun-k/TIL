2024/06/23の積み上げ

2024/06/23

- フォームではenctype="multipart/form-data”を使用する
    - このオプションを設定しないと画像データを送信することができない
        - ファイルのエンコードなどが挙げられる
- 画像をストレージに保存するには、`store`メソッドを利用
    - 
- 画像を表示するには、`Storage`ファサードの`url`メソッドを使って画像のURLを取得してください。

1. **画像の保存**: まず、アップロードされた画像ファイルをストレージに保存します。これはLaravelの`store()`メソッドなどを使用して行います。
2. **シンボリックリンクの作成**: パブリックにアクセス可能なディレクトリに、ストレージディレクトリへのシンボリックリンクを作成します。これにより、ブラウザから直接画像ファイルにアクセスできるようになります。
3. **画像のURL取得**: 保存された画像ファイルのパスを取得します。これは通常、ファイルの保存先を示す相対パスやデータベースのフィールドに保存されている画像のパスです。
4. **ビューファイルでの表示**: 画像のURLをビューファイルに渡し、`<img>`タグの`src`属性に設定します。この際、シンボリックリンクを介して直接アクセスできるURLを使用することで、画像がブラウザに表示されます。

これらのステップを実行することで、ストレージに保存された画像ファイルをブラウザ上で表示することができます。

シンボリックリンクを作成していないことにより、画像の読み込みができていなかった。

まずは、実装したい機能の全体像を把握することが大事だと実感した。

次は掲示板の詳細画面にてコメントを投稿できるように実装する。

こちらも先に全体像を把握する必要がある。

まずは、掲示板詳細ページにて、コメントを作成するフォームを用意する。

それからの処理で迷う。

コメントの保存の処理をどのコントローラーで実施するのか迷う。

掲示板、コメントどっちなんやろ。

いや、普通に考えてコメントのコントローラーやな。

あくまでも、コメントの保存は掲示板を保存する必要がない。
