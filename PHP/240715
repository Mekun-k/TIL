2024/07/15の積み上げ
2024/07/15

修正したコードの意味を理解する

```php
発火のタイミングが違っていた
ページのリロードタイミングが遅かった

誤　load
ページのリソース全てが読み込まれた時

正　DOMContentLoaded
DOMが全て読み込まれた時
```

イベントリスナーとは

```php
DOMContentLoaded イベントリスナー:

ページが読み込まれた時点で、DOMContentLoaded イベントが発火します。
DOMContentLoaded イベントが発生すると、setBookmarkListeners 関数が呼び出されます。
setBookmarkListeners 関数:

setBookmarkListeners 関数は、.bookmark-form クラスを持つすべてのフォーム要素を取得し、それぞれに対して以下の処理を行います：
data-listener 属性が設定されていないフォームに対してのみ処理を行います。
フォームの submit イベントをキャプチャして、デフォルトのフォーム送信を防止します。
フォームの送信先 URL を取得し、HTTP メソッドを決定します（デフォルトは POST、フォームに _method フィールドがありかつその値が DELETE の場合は DELETE を設定）。
axios を使用して非同期通信を行い、サーバーとのデータのやり取りを行います。リクエストには CSRF トークンやコンテンツタイプなどが含まれます。
サーバーからのレスポンスが返ってきたら、フォーム要素を新しい HTML で置き換えます。そして、再度 setBookmarkListeners を呼び出して、新しく挿入された要素に対しても同じリスナーを再設定します。
エラーが発生した場合は、コンソールにエラーメッセージを出力します。
MutationObserver:

MutationObserver は、document.body 以下の DOM の変更を監視します（子要素の追加・削除、属性の変更など）。
DOM の変更があるたびに、setBookmarkListeners 関数が再度呼び出され、新しい要素に対しても同じ処理が適用されるようにします。
このように、ページの読み込み後や動的な変更があった場合にも、お気に入り機能の実装に必要な処理やイベントリスナーの再設定が行われる仕組みを提供しています。
```

duskオプション
`dusk` オプションは、Laravel Dusk を使用してフロントエンドのテストを行う際に役立ちます。
