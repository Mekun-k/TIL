2024/06/06の積み上げ


# PHP学習

## 組み込み関数

PHPが標準で用意している関数のことを組み込み関数（または内部関数）と言います。[公式ドキュメント](https://www.php.net/manual/ja/functions.internal.php)の参考先に掲載されている[関数リファレンス](https://www.php.net/manual/ja/funcref.php)などに個々の関数が紹介されているので適宜確認してみましょう。

## 式展開

変数を式展開する際には#は不要
“{name}です。こんにちは”

## 変数名の呼び出し

変数名()で呼び出すことができる
”{$hoge()}”

## 引数にてデフォルト値の設定

引数にてデフォルト値の設定
変数の引数、上記の書き方でデフォルト値を設定できる
hoge($name = "らんてくん”)

## プライベート変数の定義方法

プライベート変数の定義方法
public function __construct($name = "らんてくん") {
return $this->name = $name;
}

## クラスメソッドを定義方法

クラスメソッドを定義するときは次のようにする
public **static** function aStaticMethod() {

// ...

}

## **`public`**プロパティやメソッド

どこからでもアクセス可能であり、オープンな設計が求められる場合に使用します。

## **`protected`**プロパティやメソッド

クラスの外部からのアクセスを制限しつつ、継承関係にあるクラスにはアクセスを許可する場合に使用します。

# やりたいこと

- バブルソートを使って配列内の要素の並び替え
- 

# エラー内容

- ロジックが思いつかない

# 調査

- whileを使ったりしていた。

# 原因

- ドキュメントの調査不足。
- 並び替えをする処理については、記事で見つけていたが、配列内の隣り合う要素を出力することができなかった
- バブルソートではループ処理をネストさせる必要があり、外側の配列の長さだけ処理を繰り返すことは実装できたが、内側の隣接する要素を比較する処理が実装できなかった。

# 解決策

- 答えは次のようになる
- 内側のループ処理は外側よりも開始位置が異なる。
- phpのfor文では以下のような仕様になっている。

for(条件1、条件2、条件3)

条件1は、カウンタ変数を定義することができる

条件2は、いつまでループを繰り返すか設定できる場所

条件3は、ループが一回終わるごとに実施する処理、主にカウンタ変数に計算する処理

```php
<?php
function chapter01_01($array1) {
# === 以下に記載 ===
$size = count($array1);
$max = $size - 1;

```
$i = 0;

while ($max > $i) {
  print "{$i}回目！";
}

```

}

$array1 = [5, 3, 1, 4, 2];
$sortedArray = chapter01_01($array1);
// print $sortedArray;

// foreach($sortedArray as $value) {
//     echo $value . " ";
// }
?>
```

# 参考

-
