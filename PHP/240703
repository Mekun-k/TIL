2024/07/03の積み上げ

2024/07/02

- ブックマーク機能の実装

- 疑問に思ったこと
    - bookmarksテーブルのカラム構成
        - 外部キーが2つあるのは想像がつく、ブックマークの有無に関しては、trueかfalseのカラムをせっていするのかな？
        - それともレコードがある場合、ない場合で考えるのかな
            - 後者のuser_idとboard_idの組み合わせにて判断していた
    - bookmarkのルーティングはboardにネストしたほうが実装しやすい
        - その場合、コントローラー名はboardmookmarkみたいになるのか？
    - ルーティングが反映されないとき
        - route:clearを使用する
        - 原理はわからんが再度、route:listにて表示される
    - 意味@if ($board->bookmarks->where('user_id', Auth::user()->id)->isEmpty())
        - whereを使うことによってsqlクエリがデータベースに送信されている
        - isEmptyは空って意味。つまり検索結果が空の時にtrueの処理をしてほしいときに書く
    - 

- やること
    - 掲示板詳細画面と一覧画面にブックマーク用のリンクが表示されていること
    - ブックマーク作成用のリンクをクリックすると、Bookmarkが作成され、リンクが削除用に変わること
    - ブックマーク削除用のリンクをクリックすると、Bookmarkが削除され、リンクが作成用に変わること
    - ブックマークの作成・削除用にBookmarksControllerが作成されていること
    - bookmarksテーブルを追加するmigrationファイルが作成されていること
    - Bookmarkモデルが作成されていること
    - BoardモデルとBookmarkモデルにアソシエーションが設定されていること
    - UserモデルとBookmarkモデルにアソシエーションが設定されていること
    
- 残りの実装
    - ブックマーク時、アイコンを変更させる
    - 削除の処理も実行する
    
    2024/07/03
    
    - belongsToとbelongsToManyの違い及び使い分け
        - 
    - attachメソッドの使い方
        - 
    - 多対多での、モデルファイルでの記述方法
        - 下のような書き方
        
        public function bookmarkedBy()
        {
        return $this->belongsToMany(User::class, 'board_user');
        }
        
    - 掲示板一覧ページにて、リレーションを使って情報を取得する方法
        - $boards = Board::with('bookmarkedBy')->get();
    - まず、リレーションの設定が正しい判断する
        - tinkerによって判断するのが正しいとみた
            - tinkerを起動してオブジェクトを生成・保存
            - そこからリレーションを呼び出してみるとか
            - まずは、tinkerを使用したリレーションの設定を確かめよう
                - まずは、tinkerにてレコードの生成を学習する
                    
                    ```php
                    > use App\Models\Bookmark;
                    > $userId = 1;
                    = 1
                    
                    > $boardId = 1;
                    = 1
                    
                    $bookmark = Bookmark::create ([ 'user_id' => $userId, 'board_id' => $boardId])
                    ```
                    
                - リレーションを確認する
                    
                    ```php
                    $board->user
                    $user->boards
                    ```
                    
                - デバッグ確認雛形
                    
                    ```php
                    $user = User::find(11)
                    $board = Board::find(101)
                    $user->bookmarks
                    ```
                    
                - $user→bookmarksが正常に動いたときのコード
                    
                    ```php
                    User
                        public function bookmarks()
                        {
                            return $this->belongsToMany(Board::class, 'bookmarks', 'user_id', 'board_id');
                        }
                        
                    Board
                        public function bookmarks()
                        {
                            return $this->belongsToMany(Bookmark::class, 'bookmarks');
                        }
                        
                    Bookmark
                        use HasFactory;
                        protected $fillable = [
                            'user_id',
                            'board_id',
                        ];
                    
                        public function user()
                        {
                            return $this->belongsTo(User::class);
                        }
                    
                        public function board()
                        {
                            return $this->belongsTo(Board::class);
                        }
                    ```
                    
                    - テーブルのレコードを表示させる方法
                    
                    ```php
                    $bookmarks = App\Models\Bookmark::all();
                    ```
                    
    - 
    - 
    -
