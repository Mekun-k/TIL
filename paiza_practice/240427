4月27日(土)の積み上げ

rubyでは以下のように表現する
AND == &&
OR  == ||

条件が2つ以上でも三項演算子を使える。
(条件１) || (条件2 && 条件3) ? true : false

以下の文章で倍数を調べられる
== 0のほうが直感的にわかる。
zero?を使う場合は、整数かどうか不明なとき。
整数 % 調べたい倍数 == 0
整数 % 調べたい倍数.zero?




# 3 つの整数X, Y, Zが与えられます。
# 「Xが 10 以上」かつ「Yが 10 以上」の場合はYESを、そうではない場合はNOを出力してください。
# ただし、「Zが 10 以上の」場合はXとYの値にかかわらず、必ずYESを出力してください。

# 入力される値
# X Y Z

# 期待する出力
# YESまたはNOを出力してください。末尾に改行を入れ、余計な文字、空行を含んではいけません。

# YES

# または
# NO


# ------- me --------
X, Y, Z = gets.split(' ').map(&:to_i)

def check_number(x, y, z)
    if z >= 10
        "YES"
    elsif x >= 10 && y >= 10
        "YES"
    else
        "NO"
    end
end

puts check_number(X, Y, Z)
# ------- me --------

# ------- gpt --------
X, Y, Z = gets.split.map(&:to_i)
puts (Z >= 10) || (X >= 10 && Y >= 10) ? "YES" : "NO"
# ------- gpt --------

三項演算子は2つの処理でしか書けないと思い込んでいたので、三項演算子を使う発想がなかった。
でもこれはあくまでも実行結果が2択だから可能？
条件が三つあって、4つの出力結果を出すことは不可能だろう。



# 長さ N の数列Aが与えられます。この数列に含まれる偶数の要素の個数と、奇数の要素の個数を答えてください。

# 入力される値
# N
# A1 A2 ... AN

# 期待する出力
# 偶数の要素の個数Eと、奇数の要素の個数Oを半角スペース区切りで出力してください。

# E O

# ------- me --------
N = gets.to_i
A = gets.split(' ').map(&:to_i)
E = 0 # 偶数
O = 0 # 奇数

A.each do |a|
    a % 2 == 0 ? E += 1 : O += 1
end

result = []
result = [E, O]
puts result.join(' ')
# ------- me --------

感想
最後に出力するときは配列に入れずに文字列を連結して出力すれば済む話。
次からそこを意識していこう

# ------- gpt --------
N = gets.to_i
A = gets.split.map(&:to_i)

# 偶数の要素の個数を数える
E = A.count { |a| a.even? }

# 奇数の要素の個数を数える
O = A.count { |a| a.odd? }

puts "#{E} #{O}"
# ------- gpt --------



# ある月の 1 日は日曜日、 2 日は月曜日...です。X日は何曜日でしょう。
# ・ X は 1 以上 31 以下の整数

# ▼　下記解答欄にコードを記入してみよう

# 入力される値
# X

# 期待する出力
# 答えとなる曜日Sを短縮した表記で出力してください。
# 具体的に、日曜日の場合はSun、月曜日の場合はMon、火曜日の場合はTue、水曜日の場合はWed、
# 木曜日の場合はThu、金曜日の場合はFri、土曜日の場合はSatを出力してください。

# S

# 入力例1
# 1

# 出力例1
# Sun
X = gets.to_i


if X % 7 == 0
    puts "Sat"
elsif X % 6 == 0
    puts "Fri"
elsif X % 5 == 0
    puts "Thu"
elsif X % 4 == 0
    puts "Wed"
elsif X % 3 == 0
    puts "Tue"
elsif X % 2 == 0
    puts "Mon"
elsif X % 1 == 0
    puts "Sun"
end

解けなかった悔しい！
曜日の判定 (paizaランク D 相当)
https://paiza.jp/works/mondai/conditions_branch/conditions_branch__mod_step4/edit?language_uid=ruby&t=7bf9a86241c49ade86dbe9fa76ce0f59
# ある月の 1 日は日曜日、 2 日は月曜日...です。X日は何曜日でしょう。
# ・ X は 1 以上 31 以下の整数

# ▼　下記解答欄にコードを記入してみよう

# 入力される値
# X

# 期待する出力
# 答えとなる曜日Sを短縮した表記で出力してください。
# 具体的に、日曜日の場合はSun、月曜日の場合はMon、火曜日の場合はTue、水曜日の場合はWed、
# 木曜日の場合はThu、金曜日の場合はFri、土曜日の場合はSatを出力してください。

# S

# 入力例1
# 1

# 出力例1
# Sun

X = gets.to_i

# 1日が日曜日から始まる場合の曜日を配列で表現
weekdays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]

# X日から1日が日曜日から始まる場合の経過日数を計算
days_passed = (X - 1) % 7

# 曜日を出力
puts weekdays[days_passed]

ロジックは閃いたけど、(X - 1) % 7の処理が思い浮かばんかった。
()せずに計算していた、、、、


