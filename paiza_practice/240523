rubyでは以下のように表現する
AND == &&
OR  == ||

条件が2つ以上でも三項演算子を使える。
(条件１) || (条件2 && 条件3) ? true : false

以下の文章で倍数を調べられる
== 0のほうが直感的にわかる。
zero?を使う場合は、整数かどうか不明なとき。
整数 % 調べたい倍数 == 0
整数 % 調べたい倍数.zero?




# 3 つの整数X, Y, Zが与えられます。
# 「Xが 10 以上」かつ「Yが 10 以上」の場合はYESを、そうではない場合はNOを出力してください。
# ただし、「Zが 10 以上の」場合はXとYの値にかかわらず、必ずYESを出力してください。

# 入力される値
# X Y Z

# 期待する出力
# YESまたはNOを出力してください。末尾に改行を入れ、余計な文字、空行を含んではいけません。

# YES

# または
# NO


# ------- me --------
X, Y, Z = gets.split(' ').map(&:to_i)

def check_number(x, y, z)
    if z >= 10
        "YES"
    elsif x >= 10 && y >= 10
        "YES"
    else
        "NO"
    end
end

puts check_number(X, Y, Z)
# ------- me --------

# ------- gpt --------
X, Y, Z = gets.split.map(&:to_i)
puts (Z >= 10) || (X >= 10 && Y >= 10) ? "YES" : "NO"
# ------- gpt --------

三項演算子は2つの処理でしか書けないと思い込んでいたので、三項演算子を使う発想がなかった。
でもこれはあくまでも実行結果が2択だから可能？
条件が三つあって、4つの出力結果を出すことは不可能だろう。



# 長さ N の数列Aが与えられます。この数列に含まれる偶数の要素の個数と、奇数の要素の個数を答えてください。

# 入力される値
# N
# A1 A2 ... AN

# 期待する出力
# 偶数の要素の個数Eと、奇数の要素の個数Oを半角スペース区切りで出力してください。

# E O

# ------- me --------
N = gets.to_i
A = gets.split(' ').map(&:to_i)
E = 0 # 偶数
O = 0 # 奇数

A.each do |a|
    a % 2 == 0 ? E += 1 : O += 1
end

result = []
result = [E, O]
puts result.join(' ')
# ------- me --------

感想
最後に出力するときは配列に入れずに文字列を連結して出力すれば済む話。
次からそこを意識していこう

# ------- gpt --------
N = gets.to_i
A = gets.split.map(&:to_i)

# 偶数の要素の個数を数える
E = A.count { |a| a.even? }

# 奇数の要素の個数を数える
O = A.count { |a| a.odd? }

puts "#{E} #{O}"
# ------- gpt --------
