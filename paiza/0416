dランク

標準入力メニューの最終問題が解けなかったのでもう一度解くことにする

決まった回数処理をしたいときはtimesメソッドを使用する
その処理の中で繰り返し処理をすればいい

times do 
 入力値を受け取る
 入力値を加工する
 入力値を出力する
end

標準出力メニュー、スタート
https://paiza.jp/works/mondai/stdout_primer/problem_index?language_uid=ruby

https://paiza.jp/works/mondai/stdout_primer/stdout_primer__space_oneline_step4/edit?language_uid=ruby
(* 1 から 10 までの数値をすべて、半角スペース区切りで出力してください。
ただし、末尾に半角スペースを出力してはいけません。 *)
(1..10).each { |num| print num; print ' ' if num < 10 }

{ |変数| 出力メソッド 変数;　　特定の条件のみ実施したい処理　後置if }

2つの変数を使って配列を作成したい
# 文字列 paiza と learning を半角スペース区切りで出力してください。
n = "paiza"
m = "learning"

a = Array.new(2)
a[0] = n
a[1] = m

a = [n, m]

puts a.join(' ')

配列を作りたいとき。これ便利すぎ。
(1..10).to_a
↓
[1,2,3,4,5,6,7,8,9,10]


# 3 つの文字列が改行区切りで与えられます。
# これらの文字列をバーティカルライン | 区切りで出力してください。

# 入力される値
# S1
# S2
# S3

# 出力結果
# S1|S2|S3

# me
a = Array.new(3)

3.times do |i|
    a[i] = gets.split(' ').map(&:to_s)
end

puts a.join('|')

# gpt
puts 3.times.map { gets.chomp }.join('|')

timesメソッドにmapメソッドがチェーンできることを初めて知った。
メソッドチェーンの記法がわからなくて実装できない処理がたくさんありそう。
timesメソッドとmapメソッドとjoinメソッドを1行で記述できるとは思わんかった。


# 10 個の数値が半角スペース区切りで与えられます。これらの数値すべて受け取り、そのまま出力してください。
# ただし、数値を出力した直後に必ずカンマを、末尾にはさらに改行も出力してください。

# 入力される値
# N1 N2 N3 ... N10

# 期待する出力
# N1,N2,N3,...,N10,

a = gets.split(' ').map(&:to_i)

puts a.join(',') << ','

配列の末尾に要素を追加する方法を覚えるのは時間かかりそう。 <<ってあんま使わん。
